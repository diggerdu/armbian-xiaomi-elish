# .github/workflows/build-armbian.yml
#
# This workflow is based on the official Armbian OS build process.
# It directly checks out the Armbian build tools and runs the compile script.
#
name: Build Armbian for OnePlus 8T (kebab)

on:
  # This allows you to manually trigger the workflow from the GitHub Actions UI.
  workflow_dispatch:

jobs:
  build:
    # Use a GitHub-hosted runner. The build process requires root access (sudo).
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the Armbian build scripts from the official repository.
      # We place it in a subdirectory named 'armbian-os' to keep things organized.
      - name: Checkout Armbian build tools
        uses: actions/checkout@v4
        with:
          repository: 'armbian/os'
          path: 'armbian-os'

      # Step 2: Create a custom configuration file for the build.
      # This file tells the compile script exactly what we want to build.
      - name: Create custom build configuration
        run: |
          # Create the directory for user-defined configurations if it doesn't exist.
          mkdir -p armbian-os/userpatches

          # Write the build parameters into a config file.
          # This is the modern equivalent of editing armbian-bsp-cli.conf.
          cat > armbian-os/userpatches/config-custom.sh <<EOF
          # Target device
          BOARD="oneplus-kebab"

          # Kernel configuration: 'current' for the board's recommended stable kernel.
          BRANCH="current"

          # Base OS: 'jammy' (Ubuntu 22.04 LTS) is a modern, stable choice.
          RELEASE="jammy"

          # Build with a desktop environment? Yes.
          BUILD_DESKTOP="yes"

          # Specify the desktop environment.
          DESKTOP_ENVIRONMENT="kde-plasma"

          # Build the full desktop, not a minimal version.
          DESKTOP_ENVIRONMENT_MINIMAL="no"
          EOF

      # Step 3: Run the Armbian build script.
      # The 'working-directory' ensures this command runs inside the 'armbian-os' folder.
      - name: Compile Armbian Image
        working-directory: armbian-os
        run: |
          # Execute the main compile script with sudo.
          # The script will automatically pick up our 'config-custom.sh'.
          sudo ./compile.sh

      # Step 4: Upload the final image as a workflow artifact.
      # This makes the image available for download from the workflow summary page.
      - name: Upload Armbian image
        uses: actions/upload-artifact@v4
        with:
          name: armbian-oneplus-kebab-kde
          # The images are always located in this output directory.
          path: armbian-os/output/images/
