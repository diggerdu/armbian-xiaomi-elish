# .github/workflows/build-armbian.yml
#
# This workflow is based on the official Armbian OS build process.
# It directly checks out the Armbian build tools and runs the compile script.
#
name: Build Armbian for OnePlus 8T (kebab)

on:
  # This allows you to manually trigger the workflow from the GitHub Actions UI.
  workflow_dispatch:

jobs:
  build:
    # Use a GitHub-hosted runner. The build process requires root access (sudo).
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the Armbian build scripts from the official repository.
      - name: Checkout Armbian build tools
        uses: actions/checkout@v4
        with:
          repository: 'armbian/build'
          path: 'armbian'
          # Explicitly specify the 'main' branch to ensure consistency.
          ref: 'main'

      # Step 2: Verify that the checkout was successful and essential files exist.
      - name: Verify Checkout Contents
        run: |
          echo "Verifying contents of 'armbian' directory:"
          ls -la armbian/
          echo "Checking for compile.sh..."
          if [ ! -f "armbian/compile.sh" ]; then
            echo "ERROR: compile.sh not found after checkout!"
            exit 1
          fi

      # Step 3: Create a custom configuration file for the build.
      - name: Create custom build configuration
        run: |
          # The configuration file is placed in the root of the checked-out 'armbian' directory.
          cat > armbian/userpatches.conf <<EOF
          # Target device
          BOARD="oneplus-kebab"

          # Kernel configuration: 'current' for the board's recommended stable kernel.
          BRANCH="current"

          # Base OS: 'noble' (Ubuntu 24.04 LTS) for the latest release.
          RELEASE="noble"

          # Build with a desktop environment? Yes.
          BUILD_DESKTOP="yes"

          # Specify the desktop environment.
          DESKTOP_ENVIRONMENT="kde-plasma"

          # Build the full desktop, not a minimal version.
          DESKTOP_ENVIRONMENT_MINIMAL="no"
          EOF

      # Step 4: Run the Armbian build script.
      - name: Compile Armbian Image
        working-directory: armbian
        run: |
          # Make the compile script executable to prevent permission issues.
          echo "Setting execute permissions on compile.sh..."
          chmod +x compile.sh

          # Execute the main compile script with sudo.
          echo "Running compile.sh..."
          sudo ./compile.sh

      # Step 5: Upload the final image as a workflow artifact.
      - name: Upload Armbian image
        uses: actions/upload-artifact@v4
        with:
          name: armbian-oneplus-kebab-kde
          # The images are located in the output directory relative to the checkout path.
          path: armbian/output/images/
